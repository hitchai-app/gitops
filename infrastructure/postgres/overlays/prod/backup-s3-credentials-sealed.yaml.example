# Example Sealed Secret for S3 backup credentials
#
# Instructions:
# 1. Create a regular Secret with your actual S3 credentials:
#    kubectl create secret generic backup-s3-credentials \
#      --from-literal=ACCESS_KEY_ID=your-access-key \
#      --from-literal=ACCESS_SECRET_KEY=your-secret-key \
#      --namespace=postgres-prod \
#      --dry-run=client -o yaml > backup-s3-credentials.yaml
#
# 2. Seal the secret using kubeseal:
#    kubeseal --format=yaml \
#      < backup-s3-credentials.yaml \
#      > backup-s3-credentials-sealed.yaml
#
# 3. Delete the plaintext secret file:
#    rm backup-s3-credentials.yaml
#
# 4. Uncomment the sealed secret reference in kustomization.yaml
#
# 5. Commit backup-s3-credentials-sealed.yaml to git

apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: backup-s3-credentials
  namespace: postgres-prod
spec:
  encryptedData:
    ACCESS_KEY_ID: REPLACE_WITH_SEALED_VALUE
    ACCESS_SECRET_KEY: REPLACE_WITH_SEALED_VALUE
  template:
    metadata:
      name: backup-s3-credentials
      namespace: postgres-prod
    type: Opaque
