name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write # Allow creating reviews and comments
      issues: write # Allow commenting on issues
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Allow all bots to trigger the review
          allowed_bots: '*'

          # Enable necessary tools for PR review
          settings: |
            {
              "permissions": {
                "allowAll": true
              }
            }

          prompt: |
            You are reviewing PR #${{ github.event.pull_request.number }} in ${{ github.repository }}.

            CRITICAL: You MUST post your review using GitHub's review API. Follow these steps:

            1. Get PR diff using available tools (mcp__github__get_pull_request_diff or gh pr diff)
            2. Review CLAUDE.md and ADRs for architectural context
            3. Create a pending review: mcp__github__create_pending_pull_request_review
            4. Add specific inline comments on problematic lines: mcp__github__add_pull_request_review_comment_to_pending_review
            5. Submit the review with verdict: mcp__github__submit_pending_pull_request_review

            Review criteria (GitOps infrastructure - changes affect production):
            - What will fail in production
            - Resource limits and cluster impact
            - Breaking changes to existing workloads
            - Security vulnerabilities
            - Missing validations or error handling
            - Untested edge cases
            - Alignment with ADR patterns

            Be skeptical and critical. If something looks wrong, it probably is.

            Verdict rules:
            - APPROVE: Only if no blocking issues AND aligns with ADRs
            - REQUEST_CHANGES: If any blocking concerns exist
            - COMMENT: For minor suggestions only

            DO NOT just post a comment - you MUST submit a formal review with APPROVE or REQUEST_CHANGES.

